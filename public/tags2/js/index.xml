<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>js on MuryP Beta</title><link>/tags2/js/</link><description>Recent content in js on MuryP Beta</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 20 Dec 2021 17:25:50 +0700</lastBuildDate><atom:link href="/tags2/js/index.xml" rel="self" type="application/rss+xml"/><item><title>Memory</title><link>/note/js-memory/</link><pubDate>Mon, 20 Dec 2021 17:25:50 +0700</pubDate><guid>/note/js-memory/</guid><description>local storage var retrievedObject = localStorage.getItem(&amp;#39;testObject&amp;#39;); console.log(&amp;#39;retrievedObject: &amp;#39;, JSON.parse(retrievedObject)); cokie https://stackoverflow.com/questions/11344531/pure-javascript-store-object-in-cookie</description></item><item><title>Daftar variable JS</title><link>/note/daftar-variable-js/</link><pubDate>Wed, 15 Dec 2021 08:08:50 +0700</pubDate><guid>/note/daftar-variable-js/</guid><description>checklist const $chekList = (sel)=&amp;gt; { const hasil = sel.options[sel.selectedIndex].value; return hasil; } // penggunaan : // const list_section = ()=&amp;gt;{ // const url_list = document.getElementById(&amp;#34;list-section-search&amp;#34;); // const hasil_url = $chekList(url_list); // return hasil_url // } // console.log(list_section()) get json //get json const $get_json=function(url){ const get_json = fetch(url) .then((res) =&amp;gt; res.json()) return get_json } // how use it : // const url = &amp;#34;/index.json&amp;#34; // $get_json(url) // .then((data)=&amp;gt;{ // console.log(data) // })</description></item><item><title>Btn Add Script</title><link>/note/btn-add-script/</link><pubDate>Wed, 15 Dec 2021 08:05:00 +0700</pubDate><guid>/note/btn-add-script/</guid><description>script const addScript = (e)=&amp;gt;{ const script = document.createElement(&amp;#34;script&amp;#34;); script.type = &amp;#34;text/javascript&amp;#34;; script.src = e; // use this for linked script script.appendChild(script); } let add_script=0 const add_data = (e)=&amp;gt;{ add_script++ if (add_script==1) { alert(`hello ${e}`) } } const shortTag=(e)=&amp;gt;{ } const addList = (tags)=&amp;gt;{ //add data blog // short by tags // inner html console.log(tags) } const link = (e) =&amp;gt; { if (e===&amp;#34;/&amp;#34;) { //addscript(/js/list.js) //addscript(/js/list.</description></item><item><title>Get Link, Url management</title><link>/note/slug/</link><pubDate>Wed, 15 Dec 2021 08:03:56 +0700</pubDate><guid>/note/slug/</guid><description>get link const link = (e) =&amp;gt; { if (e===&amp;#34;/&amp;#34;) { //addscript(/js/list.js) //addscript(/js/list.js) // get id // template // innerhtml blog load more // innerhtml note load more // te } // alert(e); const nextTitle = &amp;#34;My new page&amp;#34;; const nextState = { additionalInformation: &amp;#34;Updated the URL with JS&amp;#34; }; // This will create a new entry in the browser&amp;#39;s history, without reloading window.</description></item><item><title>Search</title><link>/note/search/</link><pubDate>Wed, 15 Dec 2021 07:51:41 +0700</pubDate><guid>/note/search/</guid><description>script // filter const showList = (data) =&amp;gt; { results.innerHTML = &amp;#34;&amp;#34;; console.log(data) const filter_judul = data .filter((item) =&amp;gt; { return item.tags.toLowerCase().includes(getTags()); }) .filter((item) =&amp;gt; { return item.judul.toLowerCase().includes(search_term); }) .forEach((e) =&amp;gt; { const li = document.createElement(&amp;#34;li&amp;#34;); li.innerHTML = `&amp;lt;a class=&amp;#34;${e.tags}&amp;#34; href=&amp;#34;${e.link}&amp;#34;&amp;gt;${e.judul}&amp;lt;/a&amp;gt;`; results.appendChild(li); }); }; // get tags const getTags = ()=&amp;gt;{ return document.getElementById(&amp;#34;list-tags-search&amp;#34;).value } // console.log()etTags()) // section const getSection = () =&amp;gt; { // get section const url_list = document.</description></item><item><title>Load More</title><link>/note/load-more/</link><pubDate>Wed, 15 Dec 2021 07:46:54 +0700</pubDate><guid>/note/load-more/</guid><description>script // get id const results = document.getElementById(&amp;#34;list-post&amp;#34;); const loadMore = document.getElementById(&amp;#34;load-more&amp;#34;); // get slug // get tags // sort by tags // template // munculkan let countPost = 5; // catch json let url = &amp;#34;/blog/index.json&amp;#34;; function fetchListPost() { fetch(url) .then((res) =&amp;gt; res.json()) .then((dataJSON) =&amp;gt; { // pagenation const data = dataJSON.slice(0, countPost); // result results.innerHTML = &amp;#34;&amp;#34;; data.forEach((e) =&amp;gt; { const div = document.createElement(&amp;#34;div&amp;#34;); div.innerHTML = `&amp;lt;div class=&amp;#34;myread&amp;#34;&amp;gt; &amp;lt;a href=&amp;#34;${e.</description></item><item><title>Btn Section</title><link>/note/btn-section/</link><pubDate>Wed, 15 Dec 2021 07:30:06 +0700</pubDate><guid>/note/btn-section/</guid><description>script // if change const btnSectionSearch = (e)=&amp;gt;{ const blog_tags = document.getElementById(&amp;#34;blog-tags-list-search&amp;#34;) const note_tags = document.getElementById(&amp;#34;note-tags-list-search&amp;#34;) // console.log(e) if (e===&amp;#34;all&amp;#34;) { blog_tags.style.display = &amp;#34;initial&amp;#34;; note_tags.style.display = &amp;#34;initial&amp;#34;; }else if(e===&amp;#34;blog&amp;#34;){ blog_tags.style.display = &amp;#34;initial&amp;#34;; note_tags.style.display = &amp;#34;none&amp;#34;; }else{ blog_tags.style.display = &amp;#34;none&amp;#34;; note_tags.style.display = &amp;#34;initial&amp;#34;; } } html &amp;lt;select id=&amp;#34;list-section-search&amp;#34; onChange=&amp;#34;btnSectionSearch(this.value)&amp;#34;&amp;gt; &amp;lt;option value=&amp;#34;all&amp;#34;&amp;gt;All&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;#34;blog&amp;#34;&amp;gt;Blog&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;#34;note&amp;#34;&amp;gt;Note&amp;lt;/option&amp;gt; &amp;lt;/select&amp;gt; &amp;lt;select id=&amp;#34;list-tags-search&amp;#34;&amp;gt; &amp;lt;option value=&amp;#34;&amp;#34;&amp;gt;All:&amp;lt;/option&amp;gt; &amp;lt;optgroup id=&amp;#34;blog-tags-list-search&amp;#34; label=&amp;#34;Blog :&amp;#34;&amp;gt; &amp;lt;option value=&amp;#34;#&amp;#34;&amp;gt;All Blog&amp;lt;/option&amp;gt; {{ range $name, $taxonomy1 := .</description></item></channel></rss>